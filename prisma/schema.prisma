generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model evento {
  id                       Int                           @id @default(autoincrement())
  titulo                   String                        @db.VarChar(255)
  descricao                String                        @db.Text
  data_inicio              DateTime                      @db.Date
  data_fim                 DateTime                      @db.Date
  horario_inicio           DateTime                      @db.Time(0)
  horario_fim              DateTime                      @db.Time(0)
  localizacao              String                        @db.VarChar(255)
  link_maps                String?                       @db.VarChar(500)
  publico                  Boolean                       @default(true)
  gratuito                 Boolean                       @default(true)
  limite_pessoas           Int?
  organizador_id           Int
  tipo_evento              evento_tipo_evento
  capa_url                 String?                       @db.VarChar(500)
  requer_alvara            Boolean?                      @default(false)
  alvara_url               String?                       @db.VarChar(500)
  aprovado_pela_modereacao Boolean?                      @default(false)
  resposta_da_moderacao    evento_resposta_da_moderacao? @default(pendente)
  aprovado_pela_prefeitura Boolean?                      @default(false)
  motivo_rejeicao          String?                       @db.Text
  denuncias                Int?                          @default(0)
  denunciado_em            DateTime?                     @db.Timestamp(0)
  visivel_apos_evento      Boolean?                      @default(true)
  tempo_visivel            Int?
  criado_em                DateTime                      @db.Date
  usuario                  usuario                       @relation(fields: [organizador_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "evento_ibfk_1")
  inscricao                inscricao[]

  @@index([organizador_id], map: "organizador_id")
}

model inscricao {
  id                  Int                      @id @default(autoincrement())
  usuario_id          Int
  evento_id           Int
  status              inscricao_status
  tipo_inscricao      inscricao_tipo_inscricao
  data_inscricao      DateTime                 @db.DateTime(0)
  confirmado_presenca Boolean?                 @default(false)
  usuario             usuario                  @relation(fields: [usuario_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "inscricao_ibfk_1")
  evento              evento                   @relation(fields: [evento_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "inscricao_ibfk_2")

  @@index([evento_id], map: "evento_id")
  @@index([usuario_id], map: "usuario_id")
}

model usuario {
  id              Int                  @id @default(autoincrement())
  nome            String               @db.VarChar(255)
  cpf             String               @unique(map: "cpf") @db.VarChar(11)
  data_nascimento DateTime             @db.Date
  email           String               @unique(map: "email") @db.VarChar(255)
  senha_hash      String               @db.VarChar(255)
  cep             String               @db.VarChar(20)
  uf              String               @db.Char(2)
  tipo_usuario    usuario_tipo_usuario
  data_criacao    DateTime             @default(now())
  evento          evento[]
  inscricao       inscricao[]
}

enum inscricao_status {
  pendente
  confirmada
  cancelada
}

enum inscricao_tipo_inscricao {
  gratuita
  paga
}

enum usuario_tipo_usuario {
  GERAL @map("1")
  PREMIUM @map("2")
  CREDENCIADO @map("3")
  MODERADOR @map("4") 
}

enum evento_tipo_evento {
  cultural
  educacional
  turistico
  esportivo
}

enum evento_resposta_da_moderacao {
  pendente
  aprovado
  rejeitado
}
